{
  "version": 3,
  "sources": ["qrapp.js"],
  "sourcesContent": ["/* \n * QR Code generator demo (JavaScript)\n * \n * Copyright (c) Project Nayuki. (MIT License)\n * https://www.nayuki.io/page/qr-code-generator-library\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n * - The above copyright notice and this permission notice shall be included in\n *   all copies or substantial portions of the Software.\n * - The Software is provided \"as is\", without warranty of any kind, express or\n *   implied, including but not limited to the warranties of merchantability,\n *   fitness for a particular purpose and noninfringement. In no event shall the\n *   authors or copyright holders be liable for any claim, damages or other\n *   liability, whether in an action of contract, tort or otherwise, arising from,\n *   out of or in connection with the Software or the use or other dealings in the\n *   Software.\n */\n\n\"use strict\";\nvar app = new function() {\n\n\tfunction initialize() {\n\t\tvar elems = document.querySelectorAll(\"input[type=number], textarea\");\n\t\tfor (var i = 0; i < elems.length; i++) {\n\t\t\tif (elems[i].id.indexOf(\"version-\") != 0)\n\t\t\t\telems[i].oninput = redrawQrCode;\n\t\t}\n\t\telems = document.querySelectorAll(\"input[type=radio], input[type=checkbox]\");\n\t\tfor (var i = 0; i < elems.length; i++)\n\t\t\telems[i].onchange = redrawQrCode;\n\t\tredrawQrCode();\n\t}\n\n\n\tfunction redrawQrCode() {\n\t\t// Show/hide rows based on bitmap/vector image output\n\t\tvar bitmapOutput = document.getElementById(\"output-format-bitmap\").checked;\n\t\tvar scaleRow = document.getElementById(\"scale-row\");\n\t\tvar svgXmlRow = document.getElementById(\"svg-xml-row\");\n\t\tif (bitmapOutput) {\n\t\t\tscaleRow.style.removeProperty(\"display\");\n\t\t\tsvgXmlRow.style.display = \"none\";\n\t\t} else {\n\t\t\tscaleRow.style.display = \"none\";\n\t\t\tsvgXmlRow.style.removeProperty(\"display\");\n\t\t}\n\t\tvar svgXml = document.getElementById(\"svg-xml-output\");\n\t\tsvgXml.value = \"\";\n\n\t\t// Reset output images in case of early termination\n\t\tvar canvas = document.getElementById(\"qrcode-canvas\");\n\t\tvar svg = document.getElementById(\"qrcode-svg\");\n\t\tcanvas.style.display = \"none\";\n\t\tsvg.style.display = \"none\";\n\n\t\t// Returns a QrCode.Ecc object based on the radio buttons in the HTML form.\n\t\tfunction getInputErrorCorrectionLevel() {\n\t\t\tif (document.getElementById(\"errcorlvl-medium\").checked)\n\t\t\t\treturn window.qrgen.QrCode.Ecc.MEDIUM;\n\t\t\telse if (document.getElementById(\"errcorlvl-quartile\").checked)\n\t\t\t\treturn window.qrgen.QrCode.Ecc.QUARTILE;\n\t\t\telse if (document.getElementById(\"errcorlvl-high\").checked)\n\t\t\t\treturn window.qrgen.QrCode.Ecc.HIGH;\n\t\t\telse // In case no radio button is depressed\n\t\t\t\treturn window.qrgen.QrCode.Ecc.LOW;\n\t\t}\n\n\t\t// Get form inputs and compute QR Code\n\t\tvar ecl = getInputErrorCorrectionLevel();\n\t\tvar text = document.getElementById(\"text-input\").value;\n\t\tvar segs = window.qrgen.QrSegment.makeSegments(text);\n\t\tvar minVer = parseInt(document.getElementById(\"version-min-input\").value, 10);\n\t\tvar maxVer = parseInt(document.getElementById(\"version-max-input\").value, 10);\n\t\tvar mask = parseInt(document.getElementById(\"mask-input\").value, 10);\n\t\tvar boostEcc = document.getElementById(\"boost-ecc-input\").checked;\n\t\tvar qr = window.qrgen.QrCode.encodeSegments(segs, ecl, minVer, maxVer, mask, boostEcc);\n\n\t\t// Draw image output\n\t\tvar border = parseInt(document.getElementById(\"border-input\").value, 10);\n\t\tif (border < 0 || border > 100)\n\t\t\treturn;\n\t\tif (bitmapOutput) {\n\t\t\tvar scale = parseInt(document.getElementById(\"scale-input\").value, 10);\n\t\t\tif (scale <= 0 || scale > 30)\n\t\t\t\treturn;\n\t\t\tqr.drawCanvas(scale, border, canvas);\n\t\t\tcanvas.style.removeProperty(\"display\");\n\t\t} else {\n\t\t\tvar code = qr.toSvgString(border);\n\t\t\tsvg.setAttribute(\"viewBox\", / viewBox=\"([^\"]*)\"/.exec(code)[1]);\n\t\t\tsvg.querySelector(\"path\").setAttribute(\"d\", / d=\"([^\"]*)\"/.exec(code)[1]);\n\t\t\tsvg.style.removeProperty(\"display\");\n\t\t\tsvgXml.value = qr.toSvgString(border);\n\t\t}\n\n\t\t// Returns a string to describe the given list of segments.\n\t\tfunction describeSegments(segs) {\n\t\t\tif (segs.length == 0)\n\t\t\t\treturn \"none\";\n\t\t\telse if (segs.length == 1) {\n\t\t\t\tvar mode = segs[0].mode;\n\t\t\t\tvar Mode = window.qrgen.QrSegment.Mode;\n\t\t\t\tif (mode == Mode.NUMERIC) return \"numeric\";\n\t\t\t\tif (mode == Mode.ALPHANUMERIC) return \"alphanumeric\";\n\t\t\t\tif (mode == Mode.BYTE) return \"byte\";\n\t\t\t\tif (mode == Mode.KANJI) return \"kanji\";\n\t\t\t\treturn \"unknown\";\n\t\t\t} else\n\t\t\t\treturn \"multiple\";\n\t\t}\n\n\t\t// Returns the number of Unicode code points in the given UTF-16 string.\n\t\tfunction countUnicodeChars(str) {\n\t\t\tvar result = 0;\n\t\t\tfor (var i = 0; i < str.length; i++, result++) {\n\t\t\t\tvar c = str.charCodeAt(i);\n\t\t\t\tif (c < 0xD800 || c >= 0xE000)\n\t\t\t\t\tcontinue;\n\t\t\t\telse if (0xD800 <= c && c < 0xDC00 && i + 1 < str.length) { // High surrogate\n\t\t\t\t\ti++;\n\t\t\t\t\tvar d = str.charCodeAt(i);\n\t\t\t\t\tif (0xDC00 <= d && d < 0xE000) // Low surrogate\n\t\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow \"Invalid UTF-16 string\";\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\t// Show the QR Code symbol's statistics as a string\n\t\tvar stats = \"QR Code version = \" + qr.version + \", \";\n\t\tstats += \"mask pattern = \" + qr.mask + \", \";\n\t\tstats += \"character count = \" + countUnicodeChars(text) + \",\\n\";\n\t\tstats += \"encoding mode = \" + describeSegments(segs) + \", \";\n\t\tstats += \"error correction = level \" + \"LMQH\".charAt(qr.errorCorrectionLevel.ordinal) + \", \";\n\t\tstats += \"data bits = \" + window.qrgen.QrSegment.getTotalBits(segs, qr.version) + \".\";\n\t\tdocument.getElementById(\"statistics-output\").textContent = stats;\n\t}\n\n\n\tthis.handleVersionMinMax = function(which) {\n\t\tvar minElem = document.getElementById(\"version-min-input\");\n\t\tvar maxElem = document.getElementById(\"version-max-input\");\n\t\tvar minVal = parseInt(minElem.value, 10);\n\t\tvar maxVal = parseInt(maxElem.value, 10);\n\t\tminVal = Math.max(Math.min(minVal, window.qrgen.QrCode.MAX_VERSION), window.qrgen.QrCode.MIN_VERSION);\n\t\tmaxVal = Math.max(Math.min(maxVal, window.qrgen.QrCode.MAX_VERSION), window.qrgen.QrCode.MIN_VERSION);\n\t\tif (which == \"min\" && minVal > maxVal)\n\t\t\tmaxVal = minVal;\n\t\telse if (which == \"max\" && maxVal < minVal)\n\t\t\tminVal = maxVal;\n\t\tminElem.value = minVal.toString();\n\t\tmaxElem.value = maxVal.toString();\n\t\tredrawQrCode();\n\t}\n\n\tinitialize();\n};\n\n\n(function(global, factory) {\n\t\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\t\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.qrapp = app));\n\t\t\t})(this, (function(exports) {\n\n\t\tObject.defineProperty(exports, '__esModule', {\n\t\t\tvalue: true\n\t\t});\n\t}));"],
  "mappings": "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",
  "names": ["initialize", "elems", "i", "redrawQrCode", "bitmapOutput", "scaleRow", "svgXmlRow", "svgXml", "canvas", "svg", "getInputErrorCorrectionLevel", "ecl", "text", "segs", "minVer", "maxVer", "mask", "boostEcc", "qr", "border", "scale", "code", "describeSegments", "mode", "Mode", "countUnicodeChars", "str", "result", "c", "d", "stats", "which", "minElem", "maxElem", "minVal", "maxVal", "global", "factory", "exports"]
}
